Checkpoint 1

# Include bug, associated files, and how it was fixed

Carlos:
1. I was trying to use iolitoctl to set the posititon by passing in an int but
the whole time i needed to pass in a size_t.
2.In the elf.c file I needed to make sure it was a riscv file and i didn't know how to. It ended up being 
i just needed to check for the number 243
3. When making tests i could not 


CP3:

Neel:
Memory clone
We had a problem with memory clone, because we were defining two variables to hold the old and new clone,
We were accidentally overwrriting the variable instead of using a pointer. This makes our cloned memory space
show up well on info mem. 

We are still facing issues with this, because our _fork is not able to find the instruction in the location 
it should be.

Dash:

When initially testing locking on a dummy program, our lock always said "failed to get write lock". We fixed this by making our
locking conditions looser and allowing for locks to be picked up before trap entry exits.

Worked with Carlos on these: 
Store access/Instruction page fault: Faced a store access fault which is still unsolved after fork. Program crashes after sret 
after thread_finish_fork. 
also, sscratch was having incorrect value after running. fixed by setting it using the kernel child 
stack pointer passed into thread_finish_fork using the child's sp in its context.

Carlos:
syswait error where the program was hanging. turns out we were using the incorrect tid, sleeping threads 
which weren't running yet.

Sam:

fib error: fib wasn't running, turns out one of the new files hadn't been updated correctly. fixed by updating file to 
correct values.

memory clone: lvl 1 and 0 page tables weren't being cloned properly, had size 0. fixed by rewriting cloning scheme

